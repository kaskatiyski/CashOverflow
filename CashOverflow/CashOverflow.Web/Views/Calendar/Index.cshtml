@{
    ViewData["Title"] = "View";
}

<h1>Calendar</h1>

<style>

    .calendar {
        height: 100%;
            background: white;
    border-radius: 6px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.07);
    font-size: 0.9rem;
    }

    .calendar-title {
    }

    .calendar-week-names {
        display: flex;
        margin-bottom: 5px;
    }

    .calendar-week-name {
        flex: 0 0 14.285714285714285714285714285714%;
        max-width: 14.285714285714285714285714285714%;
        flex: auto;
        text-align: center;
        text-transform: uppercase;
        padding: 0.4rem;
        border-bottom: 1px solid #e5eaeb;
    }

    .calendar-body {
        height: 100%;
    }

    .calendar-week {
        display: flex;
    }

    .calendar-week-info {
        border-top: 1px solid #e5eaeb;
        padding: 20px 15px;
    }

    .calendar-day {
        flex: 0 0 14.285714285714285714285714285714%;
        max-width: 14.285714285714285714285714285714%;
        padding: 0.25rem 0.75rem;
        height: 90px;
        cursor: pointer;
    }

    .calendar-day-selected {
        background: #f3f7f7;
    }

    .tooltip > .tooltip-inner {
        background-color: white;
        text-align: left;
        color: black;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.19);
    }

    .tooltip.show {
        opacity: 1;
        filter: alpha(opacity=100);
    }

    .bs-tooltip-auto[x-placement^=bottom] .arrow::before,
    .bs-tooltip-bottom .arrow::before {
        border-bottom-color: white; /* Red */
    }

    .calendar-day-other-month {
        color: gray;
    }

    .calendar-day-number {
    }

    .calender-day-expense {
    }

    .calender-day-income {
    }

    .test {
        display: flex;
    }
</style>

<div onclick="incrementMonth(-1)">Previous month</div>
<div onclick="incrementMonth(1)">Next month</div>

<div id="calendar" class="calendar">
    <div id="calendarTitle" class="calendar-title fs-8 mb-4"></div>
    <div id="calendarWeekNames" class="calendar-week-names"></div>
    <div id="calendarBody" class="calendar-body">

    </div>
</div>

<script>
    $(function () {
      $('[data-toggle="tooltip"]').tooltip()
    })


    let transactions = {};
    let currentMonth = moment();

    function sum(items, prop) {
        if (items == null) {
            return 0;
        }
        return items.reduce(function (a, b) {
            return b[prop] == null ? a : a + b[prop];
        }, 0);
    };

    function incrementMonth(value) {
            currentMonth.add(value, 'month');
            getTransactions(currentMonth);
    }

    $(document).ready(function () {

        getTransactions(currentMonth);

    });

    function getTransactions(date) {

            if (transactions.hasOwnProperty(date.format("YYYYMM"))) {
                updateCalendar(transactions[date.format("YYYYMM")]);
                return;
        }

            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetTransactionsForMonth")',
                dataType: 'json',
                data: {
                    date: date.format("YYYY-MM")
                },
                success: function (data) {
                    transactions = {...transactions, ...data.transactions};
                    updateCalendar(data);
                }

            });


    }

    function updateData(week, key) {
        let monthKey = key.slice(0, 6);
        let dayKey = key;

        let weekElement = $('#weekInfoContent' + week)[0];
            weekElement.innerHTML = "";

        if (transactions[dayKey]) {
            for (var i = 0; i < transactions[dayKey].length; i++) {
                weekElement.innerHTML +=
                    `
    <div>
    ${transactions[dayKey][i].recipient} - ${transactions[dayKey][i].ammount}
    </div>


    `;
            }
        } 
    }

    function updateCalendar(data) {
        drawCalendar();

                let keys = Object.keys(data.transactions);
                let values = Object.values(data.transactions);

        for (var i = 0; i < values.length; i++) {
            let expenses = JSON.parse(JSON.stringify(values[i])).filter(x => x.category.type === 2);
            let income = JSON.parse(JSON.stringify(values[i])).filter(x => x.category.type === 1);

                    let expenseTotal = expenses.reduce(function(prev, cur) {return prev + cur.ammount;}, 0);
            let incomeTotal = income.reduce(function (prev, cur) { return prev + cur.ammount; }, 0);



            let tooltipContent =
                `
<div class="font-weight-bolder fs-3 text-uppercase">${keys[i].slice(keys[i].length - 2, keys[i].length)} ${currentMonth.format("MMM YYYY")}</div>


<div class="row">
    <div class="col-12 test text-success">
        <div class="" style="">Income</div>
        <div class="ml-auto text-success" style="">${incomeTotal.toFixed(2)} BGN</div>
    </div>
    <div class="col-12 test text-danger">
        <div class="" style="">Expenses</div>
        <div class="ml-auto text-danger" text-right" style="">${expenseTotal.toFixed(2)} BGN</div>
    </div>
    <div class="col-12 test text-primary">
        <div class="" style="">Profit</div>
        <div class="ml-auto text-primary" style="">${(incomeTotal - expenseTotal).toFixed(2)} BGN</div>
    </div>
</div>
<br/>
<div class="row">

                        `;

                    if (expenseTotal) {
                        $('#' + keys[i]).children(".calendar-day-expense").text(expenseTotal.toFixed(2));
                        //tooltipContent += "<div class='col-12'>Expenses</div>";
            }

            for (var j = 0; j < expenses.length; j++) {
                tooltipContent += `
<div class="col-12 test">


    <div class="" style="">${expenses[j].recipient}</div>
    <div class="ml-auto" style="">-${expenses[j].ammount.toFixed(2)} BGN</div>
</div>
`;
            }
            //tooltipContent += "<br/>";
            //tooltipContent += "<br/>";

                    if (incomeTotal) {
                        $('#' + keys[i]).children(".calendar-day-income").text(incomeTotal.toFixed(2));
            //tooltipContent += "<div class='col-12'>Income</div>"

            }



            for (var j = 0; j < income.length; j++) {
                tooltipContent += `
<div class="col-12 test">
    <div class="" style="">${income[j].recipient}</div>
    <div class="ml-auto" style="">+${income[j].ammount.toFixed(2)} BGN</div>
</div>
`;
            }

tooltipContent += "</div>"



                    $('#' + keys[i]).attr('title', tooltipContent);
            $('#' + keys[i]).tooltip();

            let week = Math.floor(moment(keys[i]).date() / 7);

            
            

                }
        tooltipContent = "";

    }



    function drawCalendar() {
        let calendar = [];
        const startDay = currentMonth.clone().startOf('month').startOf('isoWeek');
        const endDay = currentMonth.clone().endOf('month').endOf('isoWeek');

        //let date = startDay.clone();
        let date = startDay.clone().subtract(1, 'day');

        while (date.isBefore(endDay, 'day')) {
            calendar.push({
                days: Array(7).fill(0).map(() => date.add(1, 'day').clone())
            })
        }

        $('#calendarTitle').text(currentMonth.format("MMMM YYYY"));

        $("#calendarBody").text("");

        if (!$("#calendarWeekNames").text()) {
            let days = moment.weekdays()
            days.push(days.shift()); moment.euweekdays = days;

            for (var i = 0; i < days.length; i++) {
                $("#calendarWeekNames").append("<div class='calendar-week-name'>" + days[i].slice(0, 3) + "</div>")
            }
        }

        let weekNumber = 0;
        for (var i = 0; i < calendar.length; i++, weekNumber++) {
            let week = $('<div class="calendar-week">');

            for (var j = 0; j < calendar[i].days.length; j++) {
                let day = $('<div data-toggle="tooltip" data-html="true" data-placement="bottom" id="' + calendar[i].days[j].format("YYYYMMDD") + '" class="calendar-day"></div>');

                if (calendar[i].days[j] < currentMonth.clone().startOf('month') || calendar[i].days[j] > currentMonth.clone().endOf('month')) {
                    day.addClass('calendar-day-other-month');
                }


                let dayValue = parseInt(calendar[i].days[j].format("DD"), 10);
                let weekValue = weekNumber;
                let key = calendar[i].days[j].format("YYYYMMDD");

                day.on('click', function () {   
                    updateData(weekValue, key);
                    showWeekInfo(weekValue, dayValue, day);
                });

                let dayNumber = $('<div class="calendar-day-number"></div>');
                let dayExpense = $('<div class="calendar-day-expense text-danger"></div>');
                let dayIncome = $('<div class="calendar-day-income text-success"></div>');
                dayExpense[0].innerHTML = "&nbsp;";
                dayIncome[0].innerHTML = "&nbsp;";

                day.append(dayNumber);
                day.append(dayIncome);
                day.append(dayExpense);
                week.append(day);

                dayNumber.text(calendar[i].days[j].format("DD"));
            }

            let weekInfo = $('<div id="weekInfo' + weekNumber + '" class="week-info-collapse collapse col-12"><div id="weekInfoContent' + weekNumber + '"  class="calendar-week-info"></div></div>');

             $("#calendarBody").append(week);
             $("#calendarBody").append(weekInfo);
        }
    }

    let currentWeekDay = 0;
    let currentWeek = -1;

    function showWeekInfo(week, day, dayElement) {
        let weekInfo = $('#weekInfo' + week);
        let weekInfoAll = $('.week-info-collapse');

        if (!weekInfoAll.hasClass('collapsing')) {
            if (currentWeekDay === day) {
                $('.calendar-day-selected').removeClass('calendar-day-selected');
                weekInfoAll.collapse('hide');
                currentWeekDay = 0;
                currentWeek = -1;
            } else if (currentWeekDay !== day) {
                if (currentWeek === week) {
                
                } else if (currentWeek !== week) {
                    weekInfo.collapse('show');

                    for (var i = 0; i < weekInfoAll.length; i++) {
                        if (parseInt(weekInfoAll[i].id.replace('weekInfo', '0')) !== week) {
                            weekInfoAll.collapse('hide');
                        }
                    }

                    currentWeek = week;
                }

                currentWeekDay = day;
                $('.calendar-day-selected').removeClass('calendar-day-selected');
                dayElement.addClass('calendar-day-selected');
            }
        }

        
    }

</script>