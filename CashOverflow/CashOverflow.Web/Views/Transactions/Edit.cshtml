@model CashOverflow.Web.ViewModels.Transaction.EditTransactionInputModel

@using CashOverflow.Models;
@using CashOverflow.Models.Enum;
@using CashOverflow.Web.ViewModels.Transaction

@{
    ViewData["Title"] = "Edit";
    // TODO: Check if there is another way to do this
    EditTransactionViewModel categories = this.ViewData["Categories"] as EditTransactionViewModel;
}

@section scripts{
    @await Html.PartialAsync("_ValidationScriptsPartial")
}

<link rel="stylesheet" href="~/css/Transactions/transactions-post.css" />

<h1>Edit</h1>

<h4>Transaction</h4>

<hr />

<div class="row">
    <div class="col-sm-6 col-12">
        <form asp-action="Edit">

            <input id="inputCategoryId" type="hidden" asp-for="CategoryId" />

            <div class="custom-card">
                <div class="custom-card-header" id="categoryHeading" data-toggle="collapse" data-target="#caregoryWrapper" aria-expanded="true" aria-controls="caregoryWrapper">
                    <div class="custom-card-header-title">
                        <div class="custom-card-header-subtitle ">Category: </div>
                        <div class="custom-card-header-maintitle regular" id="inputCategoryLabel">Choose a category</div>
                    </div>
                    <div class="input-header-arrow">
                        <i class="fas fa-chevron-down"></i>
                    </div>
                </div>
                <div id="caregoryWrapper" class="collapse show" aria-labelledby="categoryHeading">
                    <div class="custom-card-body text-center">
                        <div id="categorySwitch" class="switch-group mb-3">
                            <div id="categorySwitchIncome" class="switch" onclick="changeType('Income')">Income</div>
                            <div id="categorySwitchExpense" class="switch" onclick="changeType('Expense')">Expense</div>
                            <div id="categorySwitchTransfer" class="switch" onclick="changeType('Transfer')">Transfer</div>
                            <div id="categorySwitchSelector" class="switch-selector"></div>
                        </div>
                        <div id="expenseCategoriesList" class="category-list category-list-hidden row m-0">
                            @foreach (var category in categories.Categories.Where(x => x.Type == CategoryType.Expense))
                            {
                                <div class="category-item-wrapper col-4">
                                    <div class="category-item " onclick="setCategoryId('@category.Id', '@category.Name')">@category.Name</div>
                                </div>
                            }
                        </div>
                        <div id="incomeCategoriesList" class="category-list category-list-hidden row m-0">
                            @foreach (var category in categories.Categories.Where(x => x.Type == CategoryType.Income))
                            {
                                <div class="category-item-wrapper col-4">
                                    <div class="category-item " onclick="setCategoryId('@category.Id', '@category.Name')">@category.Name</div>
                                </div>
                            }
                        </div>
                        <div id="transferCategoriesList" class="category-list category-list-hidden row m-0 fs-9 font-weight-bolder">
                            TODO
                        </div>
                    </div>
                </div>
            </div>

            <div class="custom-card">
                <div class="custom-card-header" id="dateHeading" data-toggle="collapse" data-target="#dateWrapper" aria-expanded="false" aria-controls="dateWrapper">
                    <div class="custom-card-header-title">
                        <div class="custom-card-header-subtitle ">Date: </div>
                        <div class="custom-card-header-maintitle regular" id="inputDateLabel"></div>
                    </div>
                    <div class="input-header-arrow">
                        <i class="fas fa-chevron-down"></i>
                    </div>
                </div>
                <div id="dateWrapper" class="collapse" aria-labelledby="dateHeading">
                    <div class="custom-card-body">
                        <div class="form-group">
                            @*<label asp-for="Date" class="control-label"></label>*@
                            <div id="inputDatepicker"></div>
                            <input id="inputDate" asp-for="Date" type="hidden" class="form-control" />
                            <span asp-validation-for="Date" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>

            @* Ammount *@
            <div class="custom-card">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="input-header input-header-non-interactive">
                    @*<label asp-for="Ammount" class="control-label"></label>*@
                    <div class="d-flex justify-content-center align-items-baseline">
                        <input asp-for="Ammount" type="text" inputmode="numeric" class="form-control input-amount" id="inputAmount" placeholder="00,00" />
                        <span class="input-amount">BGN</span>
                    </div>
                    <span asp-validation-for="Ammount" class="text-danger"></span>
                </div>
            </div>

            @* Recipient *@
            <div class="custom-card">
                <div class="custom-card-header custom-card-header-non-interactive">
                    <div class="custom-card-header-title">
                        <div class="custom-card-header-subtitle ">Recipient:</div>
                        <input asp-for="Recipient" class="form-control" />
                        <span asp-validation-for="Recipient" class="text-danger"></span>
                    </div>
                </div>
            </div>

            @* Notes *@
            <div class="custom-card">
                <div class="custom-card-header custom-card-header-non-interactive">
                    <div class="custom-card-header-title">
                        <div class="custom-card-header-subtitle ">Notes:</div>
                        <input asp-for="Notes" class="form-control" />
                        <span asp-validation-for="Notes" class="text-danger"></span>
                    </div>
                </div>
            </div>

            @* Location *@
            <div class="custom-card">
                <div class="custom-card-header custom-card-header-non-interactive">
                    <div class="custom-card-header-title">
                        <div class="custom-card-header-subtitle ">Location:</div>
                        <div id="inputLocationName" class="">&nbsp;</div>
                        <div id="inputLocationAddress" class="fs-2">&nbsp;</div>

                        <input type="hidden" id="name" asp-for="Location.Name" class="form-control form-control-new" />
                        <input type="hidden" id="addr" asp-for="Location.Address" class="form-control form-control-new" />
                        <input type="hidden" id="plid" asp-for="Location.PlaceId" class="form-control form-control-new" />
                        <input type="hidden" id="lat" asp-for="Location.Latitude" class="form-control form-control-new" />
                        <input type="hidden" id="lng" asp-for="Location.Longitude" class="form-control form-control-new" />
                    </div>
                </div>
            </div>

            <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-primary" />
            </div>
        </form>
    </div>

    <div class="col-sm-6 col-12 custom-card-header-title">
        <input id="placeSearchBox" class="controls form-control px-3" type="text" placeholder="Search for a place...">
        <div id="map"></div>
    </div>

</div>

<script>
    $(document).ready(function () {
        document.getElementById('inputCategoryLabel').innerHTML = '@categories.Categories.FirstOrDefault(c => c.Id == Model.CategoryId).Name';

        @{
            var dateFormatted = Model.Date.ToString("yyyy-MM-dd");
        }

        document.getElementById('inputDateLabel').innerHTML = moment('@dateFormatted').format("DD MMM YYYY");
        document.getElementById('inputDate').value = '@dateFormatted';

        document.getElementById('inputLocationName').innerHTML = document.getElementById('name').value || "&nbsp;";
        document.getElementById('inputLocationAddress').innerHTML = document.getElementById('addr').value || "&nbsp;";
    });
</script>

<script src="~/js/Transactions/transactions-post.js" type="text/javascript"></script>

<!-- Load the API from the specified URL
    * The async attribute allows the browser to render the page while the API loads
    * The key parameter will contain your own API key (which is not needed for this tutorial)
    * The callback parameter executes the initMap() function
    -->
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD1Mqcpg5m9oGtEVrYQX2hChKwWKYR34hM&callback=initMap&libraries=places"
        type="text/javascript"></script>